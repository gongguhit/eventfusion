#!/usr/bin/env python3

from dynamic_reconfigure.parameter_generator_catkin import *

PACKAGE = "dv_ros_capture"
gen = ParameterGenerator() #配置项生成器，由键值对生成配置项

gen.add("global_hold", bool_t, 0, "Enable automatic exposure", False)
# gen.add("global_hold", bool_t, 1, "Enable automatic exposure", True) # default to true  是否允许自动曝光
# gen.add(name, type, default, dsplay_name,value)  name:配置项名称，type:配置项类型，default:配置项默认值，dsplay_name:配置项描述，value:配置项的值

bias_sensitivity_enum = gen.enum([gen.const("VeryLow", int_t, 0, "Very low bias sensitivity"),
                                  gen.const("Low", int_t, 1, "Low bias sensitivity"),
                                  gen.const("Default", int_t, 2, "Default bias sensitivity"),
                                  gen.const("High", int_t, 3, "High bias sensitivity"),
                                  gen.const("VeryHigh", int_t, 4, "Very high bias sensitivity")],
                                 "DVS bias sensitivity preset")
# gen.add("bias_sensitivity", int_t, 0,
#         "Set DVS bias sensitivity preset.", 2, 0, 4,
#         edit_method=bias_sensitivity_enum)
gen.add("bias_sensitivity", int_t, 0,
        "Set DVS bias sensitivity preset.", 0, 0, 4,
        edit_method=bias_sensitivity_enum)
# bias_sensitivity_enum为枚举类型，gen.const为枚举值，gen.enum为枚举类型的生成器，gen.add为配置项生成器
# bias_sensitivity_enum中包含了5个枚举值，分别为VeryLow、Low、Default、High、VeryHigh，对应的值分别为0、1、2、3、4。
# bias_sensitivity_enum中每个值都是一个gen.const（常量）对象，gen.const对象包含了枚举值的名称、类型（此处是整型）、值、描述等信息。

# gen.add用于生成配置项，第一个参数为配置项名称，第二个参数为配置项类型（整数），第三个参数为配置项的默认值（初始值），第四个参数为配置项的描述（显示的名称），第五个参数为默认值，第六个参数为配置项的最小值，第七个参数为配置项的最大值。
# 将敏感值设置为0

# gen.add("noise_filtering", bool_t, 0, "Enable noise filtering on event stream", False)
gen.add("noise_filtering", bool_t, 1, "Enable noise filtering on event stream", True)

# gen.add("noise_background_activity_time", int_t, 0, "Event noise filter background activity time threshold in microseconds", 2000, 1, 10000)
gen.add("noise_background_activity_time", int_t, 2000, "Event noise filter background activity time threshold in microseconds", 2000, 1, 10000)

exit(gen.generate(PACKAGE, "capture_node", "DVXplorer"))
