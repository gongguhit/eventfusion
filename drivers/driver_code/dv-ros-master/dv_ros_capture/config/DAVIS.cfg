#!/usr/bin/env python3

from dynamic_reconfigure.parameter_generator_catkin import *

PACKAGE = "dv_ros_capture"
gen = ParameterGenerator()

gen.add("exposure", int_t, 0, "Exposure duration in microseconds of the APS frame", 1000, 1, 100000)
# 参数名称为 "exposure"，表示曝光时长。
# 参数类型为 int_t，表示参数类型为整型。
# 参数默认值为 0，表示默认情况下曝光时长为0。
# 参数描述为 "Exposure duration in microseconds of the APS frame"，表示该参数的作用是设置 APS 帧的曝光时长。
# 最后三个参数依次为：参数的最小值 1，参数的最大值 100000，以及参数的默认值 5000。

gen.add("auto_exposure", bool_t, 0, "Enable automatic exposure", False)
# 参数名称为 "auto_exposure"，表示自动曝光功能。
# 参数类型为 bool_t，表示参数类型为布尔类型（True/False）。
# 参数默认值为 0，表示默认情况下关闭自动曝光功能。
# 参数描述为 "Enable automatic exposure"，表示该参数的作用是开启自动曝光功能。
# 当前值
# gen.add(name, type, default, dsplay_name,value)

readout_mode_enum = gen.enum([gen.const("EventsAndFrames", int_t, 0, "Output both, events and frames"),
                              gen.const("EventsOnly", int_t, 1, "Events only output"),
                              gen.const("FramesOnly", int_t, 2, "Frames only output")],
                             "Readout mode for the DAVIS camera")
gen.add("readout_mode", int_t, 0,
        "Set davis data readout mode.", 0, 0, 2,
        edit_method=readout_mode_enum)

color_mode_enum = gen.enum([gen.const("Color", int_t, 0, "Color frame mode"), gen.const("Grayscale", int_t, 1, "Grayscale frame mode")],
                            "Color mode for the DAVIS camera APS frame")
gen.add("color_mode", int_t, 0,
        "Set davis APS frame color mode.", 0, 0, 1, edit_method=color_mode_enum)

# gen.add("noise_filtering", bool_t, 0, "Enable noise filtering on event stream", False)
gen.add("noise_filtering", bool_t, 1, "Enable noise filtering on event stream", True)
# gen.add(name, type, default, dsplay_name,value)

gen.add("noise_background_activity_time", int_t, 0,
        "Event noise filter background activity time threshold in microseconds", 2000, 1, 10000)


exit(gen.generate(PACKAGE, "capture_node", "DAVIS"))
